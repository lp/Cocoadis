h1. Simple Data Persistence for iOS and MacOSX

!https://github.com/lp/Cocoadis/raw/master/cocoadis_graph.png!

h3. Cocoadis:
* persist your data easily.
* works transparently with Strings, Arrays, Dictionaries and Sets.
* efficient in memory cache.

h3. init:

bc. [[Cocoadis persistence] setBasePath:NSTemporaryDirectory()];
NSMutableArray * persistedArray = [[NSMutableArray alloc] initWithPersistence:@"myArray"];

h3. saving:

h5. per instance

bc. [persistedArray saveToPersistence];

h5. whole bunch

bc. [[Cocoadis persistence] saveAll];

h3. managing:

h5. releasing unused memory from the cache

bc. [[Cocoadis persistence] cleanCache];

h5. automatic releasing

bc. [[Cocoadis persistence] startAutoClean];
[[Cocoadis persistence] stopAutoClean];

h5. reset empty the cache:

bc. [[Cocoadis persistence] flushCache];

h5. wipe the whole persistence DANGER!!!

bc. [[Cocoadis persistence] clearPersistence]

h3. MacRuby:

bc. >> framework "Cocoadis"
=> true
>> cdis = NSMutableArray.alloc.initWithPersistence :myMacIRB
=> []

h5. ruby style

bc. >> cdis << "Hey"
=> ["Hey"]
>> cdis << "MacRuby"
=> ["Hey", "MacRuby"]

h5. introspect it

bc. >> Cocoadis.persistence.dbCache.inspect
=> "{\"myMacIRB\"=>[\"Hey\", \"MacRuby\"]}"     # Cache contains our message

h5. save it

bc. >> cdis.saveToPersistence
=> ["Hey", "MacRuby"]

h5. clear cache

bc. >> Cocoadis.persistence.flushCache
=> #<Cocoadis:0x20000d5e0>
>> Cocoadis.persistence.dbCache.inspect
=> "{}"     # Cache is Empty

h5. get it back from persistence

bc. >> recdis = NSMutableArray.alloc.initWithPersistence :myMacIRB
=> ["Hey", "MacRuby"]   # Cocoadis persistence kept it!

h3. Downloads:
* "Cocoadis MacOSX 10.6 Framework":https://github.com/downloads/lp/Cocoadis/Cocoadis_OSX_1_0.zip
* "Cocoadis iOS 4.2 Static Library":https://github.com/downloads/lp/Cocoadis/Cocoadis_iOS_1_0.zip
* "Cocoadis iOS Simulator 4.2 Static Library":https://github.com/downloads/lp/Cocoadis/Cocoadis_Simulator_1_0.zip


